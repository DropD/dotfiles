# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
#if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
#  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
#fi

bindkey -v
setopt interactivecomments

export LANG=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8
export CLICOLOR=1

autoload -Uz compinit && compinit

#source /usr/local/share/antigen/antigen.zsh
# test -x $HOME/.antibody_plugins.sh || antibody bundle < $HOME/.antibody_plugins.txt > $HOME/.antibody_plugins.sh
# source $HOME/.antibody_plugins.sh
source ${ZDOTDIR:-~}/antidote/antidote.zsh
antidote load

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ${ZDOTDIR:-~}/.p10k.zsh ]] || source ${ZDOTDIR:-~}/.p10k.zsh

fpath=(/usr/local/share/zsh-completions $fpath)

## local env additions
path_dir="${HOME}/.config/bash/initenv"
if [ -d $path_dir ]; then
    for env_file in ${path_dir}/*.sh; do
  source $env_file
    done
fi

## local path additions
path_dir="${HOME}/.config/bash/path"
if [ -d $path_dir ]; then
    for path_file in ${path_dir}/*.sh; do
  source $path_file
    done
fi

## aliases
alias_dir="${HOME}/.config/bash/alias"
if [ -d $alias_dir ]; then
    for alias_file in ${alias_dir}/*.sh; do
        source $alias_file
    done
fi

# set ipythondir
test -d "$HOME/.config/ipython" && export IPYTHONDIR=$HOME/.config/ipython

## editor, prefer nvim / vimr if found on the path, fall back to vim / gvim
EDITOR=vim && [ -x $(command -v nvim) ] && EDITOR=nvim
VISUAL=gvim && [ -x $(command -v vimr) ] && VISUAL=vimr

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

export CC=gcc-13
export CXX=g++-13

# ## python setup

export PYENV_ROOT=$HOME/.pyenv
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
# which pyenv && pyenv virtualenvwrapper_lazy || source virtualenvwrapper_lazy.sh > /dev/null

source $(pyenv prefix $(pyenv version-name))/bin/virtualenvwrapper.sh

## click-completion
test -x gtpyc && eval "$(_GTPYC_COMPLETE=source_zsh gtpyc)"

## rust env
test -e "${HOME}/.cargo/env" && source "${HOME}/.cargo/env"

## User bin preceeds all if exists
if [ -d "${HOME}/bin" ]; then
    export PATH=~/bin:"$PATH"
fi
